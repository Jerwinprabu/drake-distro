% Produced by CVXGEN, 2013-09-02 19:42:37 -0400.
% CVXGEN is Copyright (C) 2006-2012 Jacob Mattingley, jem@cvxgen.com.
% The code in this file is Copyright (C) 2006-2012 Jacob Mattingley.
% CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
% applications without prior written permission from Jacob Mattingley.

% Filename: cvxsolve.m.
% Description: Solution file, via cvx, for use with sample.m.
function [vars, status] = cvxsolve(params, settings)
A = params.A;
B = params.B;
C = params.C;
Cf = params.Cf;
D = params.D;
Gf = params.Gf;
Hf = params.Hf;
J = params.J;
Jdot = params.Jdot;
Jp = params.Jp;
Jpdot = params.Jpdot;
Q = params.Q;
S = params.S;
epsilon_max = params.epsilon_max;
qd = params.qd;
qddot_ref = params.qddot_ref;
s1 = params.s1;
w = params.w;
x = params.x;
x_bar = params.x_bar;
y0 = params.y0;
cvx_begin
  % Caution: automatically generated by cvxgen. May be incorrect.
  variable qdd(34, 1);
  variable epsilon(24, 1);
  variable lambda(32, 1);

  minimize(quad_form(C*x + D*(Jdot*qd + J*qdd) - y0, Q) + (2*x_bar'*S + s1')*(A*x_bar + B*(Jdot*qd + J*qdd)) + w*quad_form(qddot_ref - qdd, eye(34)) + 0.00100001*quad_form(epsilon, eye(24)) + 1.0e - 08*quad_form(qdd, eye(34)) + 1.0e - 08*quad_form(lambda, eye(32)));
  subject to
    Hf*qdd + Cf == Gf'*lambda;
    Jp*qdd + Jpdot*qd == epsilon - Jp*qd;
    lambda >= 0;
    abs(epsilon) <= epsilon_max;
cvx_end
vars.epsilon = epsilon;
vars.lambda = lambda;
vars.qdd = qdd;
status.cvx_status = cvx_status;
% Provide a drop-in replacement for csolve.
status.optval = cvx_optval;
status.converged = strcmp(cvx_status, 'Solved');
